{"version":3,"file":"static/js/974.c31fb406.chunk.js","mappings":"qLAwGA,UAnGkB,WAChB,IAAAA,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAoCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA1BE,GAAFD,EAAA,GAAUA,EAAA,IACtBE,GAA4CZ,EAAAA,EAAAA,WAAS,GAAMa,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAApDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAClCG,EAASC,gCAGfC,EAAAA,EAAAA,YAAU,WACiB,SAAAC,IAcxB,OAdwBA,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAzB,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE2BC,MAAM,GAADC,OAAIf,EAAM,0DAAyD,KAAD,EAAhF,IAARQ,EAAQG,EAAAK,MACAC,GAAG,CAADN,EAAAE,KAAA,cACR,IAAIK,MAAM,uBAADH,OAAwBP,EAASW,SAAU,KAAD,SAAAR,EAAAE,KAAA,EAIxCL,EAASY,OAAO,KAAD,EAA5BX,EAAIE,EAAAK,KACV5B,EAASqB,EAAKA,MACdjB,EAAciB,EAAKA,KAAKY,iBAAiBC,YAAYX,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAY,GAAAZ,EAAA,SAErDhB,EAASgB,EAAAY,GAAMC,SAAS,yBAAAb,EAAAc,OAAA,GAAAlB,EAAA,oBAE3BmB,MAAA,KAAAC,UAAA,EAfc,WACUxB,EAAAuB,MAAC,KAADC,UAAA,CAgBzBC,EACF,GAAG,IAEH,IAKMC,EAAiB,eAAAC,GAAA1B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAyB,IAAA,IAAAC,EAAAxB,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,OAGE,GAHFoB,EAAArB,KAAA,EAEhBoB,EAAoBE,WAAW3C,GACrCQ,GAAkB,IACdoC,MAAMH,GAAmB,CAADC,EAAApB,KAAA,cACpB,IAAIK,MAAM,+CAA+C,KAAD,SAAAe,EAAApB,KAAA,EAGzCC,MAAM,GAADC,OAAIf,EAAM,yDAAyD,CAC7FoC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEC,MAAOT,MAC7B,KAAD,EANY,IAARxB,EAAQyB,EAAAjB,MAQAC,GAAG,CAADgB,EAAApB,KAAA,eACR,IAAIK,MAAM,uBAADH,OAAwBP,EAASW,SAAU,KAAD,UAAAc,EAAApB,KAAA,GAGxCL,EAASY,OAAO,KAAD,GACtB,OADNX,EAAIwB,EAAAjB,QAER0B,EAAAA,GAAMC,QAAQ,4BAA6B,CACzCC,SAAUF,EAAAA,GAAMG,SAASC,YAE3B1D,EAASqB,EAAKA,OACfwB,EAAApB,KAAA,iBAAAoB,EAAArB,KAAA,GAAAqB,EAAAV,GAAAU,EAAA,SAEDtC,EAASsC,EAAAV,GAAMC,SAAS,yBAAAS,EAAAR,OAAA,GAAAM,EAAA,mBAE3B,kBA9BsB,OAAAD,EAAAJ,MAAA,KAAAC,UAAA,KAiCvB,OACEoB,EAAAA,EAAAA,KAAA,OAAAC,SACGC,OAAOC,KAAK/D,GAAOgE,OAAS,GAC3BC,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EAEED,EAAAA,EAAAA,KAAA,SAAOM,QAAQ,iBAAiBC,MAAO,CAAEC,YAAa,QAASP,SAAC,aAChED,EAAAA,EAAAA,KAAA,SACEO,MAAO,CACLE,aAAc,QAEhBC,KAAK,SACLC,GAAG,iBACHjB,MAAOlD,EACPoE,SAnDgB,SAACC,GACzBpE,EAAcoE,EAAEC,OAAOpB,OACvB1C,GAAkB,EACpB,KAkDQgD,EAAAA,EAAAA,KAAA,UAAQe,QAASjC,EAAmByB,MAAO,CACzCS,OAAO,kBACPP,aAAc,OACdQ,gBAAiBlE,EAAiB,UAAY,OAC9CmE,MAAOnE,EAAiB,QAAU,QAClCoE,QAASpE,EAAiB,OAAS,MAEnCqE,WAAW,QACVC,UAAWtE,IAAmBP,EAAYyD,SAC5C,qBAGHD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,oBAIX,C","sources":["views/ui/Coinvalue.js"],"sourcesContent":["import { Card, CardBody, CardTitle, CardSubtitle, Table } from \"reactstrap\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\nconst Coinvalue = () => {\r\n  const [users, setUsers] = useState({});\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [isInputChanged, setIsInputChanged] = useState(false);\r\n  const apiUrl = process.env.REACT_APP_API_URL_1;\r\n\r\n\r\n  useEffect(() => {\r\n    async function fetchUsers() {\r\n      try {\r\n        const response = await fetch(`${apiUrl}/api/v1/admin/user/coinvalue/64f2d98f58f48b089523dfa7`);\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n      \r\n        }\r\n\r\n        const data = await response.json();\r\n        setUsers(data.data);\r\n        setInputValue(data.data.oneRsValueInCoin.toString());\r\n      } catch (error) {\r\n        setError(error.message);\r\n      }\r\n    }\r\n\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n    setIsInputChanged(true)\r\n  };\r\n\r\n  const handleUpdateClick = async () => {\r\n    try {\r\n      const numericInputValue = parseFloat(inputValue);\r\n      setIsInputChanged(false)\r\n      if (isNaN(numericInputValue)) {\r\n        throw new Error('Invalid input. Please enter a valid number.');\r\n      }\r\n\r\n      const response = await fetch(`${apiUrl}/api/v1/admin/user/coinvalue/64f2d98f58f48b089523dfa7`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ value: numericInputValue }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      if(data !== ' '){\r\n        toast.success('Value Update Successfully', {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n        setUsers(data.data);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      {Object.keys(users).length > 0 ? (\r\n        <div>\r\n\r\n          <label htmlFor=\"coinValueInput\" style={{ marginRight: \"10px\" }}>1 INR =</label>\r\n          <input\r\n            style={{\r\n              borderRadius: \"10px\"\r\n            }}\r\n            type=\"number\"\r\n            id=\"coinValueInput\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n          />\r\n          <button onClick={handleUpdateClick} style={{\r\n            border:\"1px solid white\",\r\n            borderRadius: \"10px\",\r\n            backgroundColor: isInputChanged ? \"#2962ff\" : \"gray\", \r\n            color: isInputChanged ? \"white\" : \"black\", \r\n            opacity: isInputChanged ? \"100%\" : \"30%\", \r\n            \r\n            marginLeft:\"10px\"\r\n          }} disabled={!isInputChanged || !inputValue }\r\n          >Update Value</button>\r\n        </div>\r\n      ) : (\r\n        <p>No data found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Coinvalue;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","users","setUsers","_useState3","_useState4","inputValue","setInputValue","_useState5","_useState6","setError","_useState7","_useState8","isInputChanged","setIsInputChanged","apiUrl","process","useEffect","_fetchUsers","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_context","prev","next","fetch","concat","sent","ok","Error","status","json","oneRsValueInCoin","toString","t0","message","stop","apply","arguments","fetchUsers","handleUpdateClick","_ref","_callee2","numericInputValue","_context2","parseFloat","isNaN","method","headers","body","JSON","stringify","value","toast","success","position","POSITION","TOP_RIGHT","_jsx","children","Object","keys","length","_jsxs","htmlFor","style","marginRight","borderRadius","type","id","onChange","e","target","onClick","border","backgroundColor","color","opacity","marginLeft","disabled"],"sourceRoot":""}