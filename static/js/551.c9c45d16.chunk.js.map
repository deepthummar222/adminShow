{"version":3,"file":"static/js/551.c9c45d16.chunk.js","mappings":"6NAuDA,EAnD4B,WAC1B,IAAAA,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA0BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAqBtB,OAlBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEQC,EAAAA,EAAMC,IAAI,GAADC,OALvBC,+BAKiC,yCAAwC,KAAD,EAA3ET,EAAQG,EAAAO,KAEdC,QAAQC,IAAI,oBAAqBZ,EAASC,KAAKA,MAEzCA,EAAOD,EAASC,KAAKA,KAC3BU,QAAQC,IAAI,UAAUX,GACtBb,EAASa,GAAME,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,SAEfX,EAASW,EAAAU,GAAMC,SAAS,yBAAAX,EAAAY,OAAA,GAAAhB,EAAA,mBAE3B,kBAZe,OAAAJ,EAAAqB,MAAA,KAAAC,UAAA,KAchBvB,GACF,GAAG,KAGDwB,EAAAA,EAAAA,KAAA,OAAAC,SACG5B,GACC6B,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,UAAQ5B,MAEX6B,EAAAA,EAAAA,MAAA,SAAOC,UAAU,aAAYF,SAAA,EAC3BD,EAAAA,EAAAA,KAAA,SAAAC,UACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,oBACJD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,aACJD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,sBAGRD,EAAAA,EAAAA,KAAA,SAAAC,SACGhC,EAAMmC,KAAI,SAACC,GAAI,OACdH,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAKI,EAAKC,MACVN,EAAAA,EAAAA,KAAA,MAAAC,SAAKI,EAAKE,aACVP,EAAAA,EAAAA,KAAA,MAAAC,SAAKI,EAAKG,eACP,UAOnB,C","sources":["views/ui/CoinTransactiondata.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './coin.css'; \n\nconst CoinTransactiondata = () => {\n  const [users, setUsers] = useState([]);\n  const [error, setError] = useState(null);\n  const apiUrl = process.env.REACT_APP_API_URL_1;\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get(`${apiUrl}/api/v1/user/user/get-withdrawal-req`);\n\n        console.log('response:::::::::', response.data.data);\n\n        const data = response.data.data;\n        console.log(\"data:::\",data)\n        setUsers(data);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n\n    fetchUsers();\n  }, []);\n\n  return (\n    <div>\n      {error ? (\n        <p>Error: {error}</p>\n      ) : (\n        <table className=\"coin-table\">\n          <thead>\n            <tr>\n              <th>Transaction Id</th>\n              <th>User ID</th>\n              <th>Coin Amount</th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr>\n                <td>{user.id}</td>\n                <td>{user.createdBy}</td>\n                <td>{user.coinAmount}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n};\n\nexport default CoinTransactiondata;\n"],"names":["_useState","useState","_useState2","_slicedToArray","users","setUsers","_useState3","_useState4","error","setError","useEffect","fetchUsers","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_context","prev","next","axios","get","concat","process","sent","console","log","t0","message","stop","apply","arguments","_jsx","children","_jsxs","className","map","user","id","createdBy","coinAmount"],"sourceRoot":""}